input BooleanOperationFilterInput {
  eq: Boolean
  neq: Boolean
}

input CreateTaskInput {
  title: String!
}

input IntOperationFilterInput {
  eq: Int
  neq: Int
  in: [Int]
  nin: [Int]
  gt: Int
  ngt: Int
  gte: Int
  ngte: Int
  lt: Int
  nlt: Int
  lte: Int
  nlte: Int
}

type Mutation {
  createTask(input: CreateTaskInput!): TaskItem!
}

type Query {
  tasks(where: TaskItemFilterInput, order: [TaskItemSortInput!]): [TaskItem!]!
}

enum SortEnumType {
  ASC
  DESC
}

input StringOperationFilterInput {
  and: [StringOperationFilterInput!]
  or: [StringOperationFilterInput!]
  eq: String
  neq: String
  contains: String
  ncontains: String
  in: [String]
  nin: [String]
  startsWith: String
  nstartsWith: String
  endsWith: String
  nendsWith: String
}

type TaskItem {
  id: Int!
  title: String!
  isCompleted: Boolean!
}

input TaskItemFilterInput {
  and: [TaskItemFilterInput!]
  or: [TaskItemFilterInput!]
  id: IntOperationFilterInput
  title: StringOperationFilterInput
  isCompleted: BooleanOperationFilterInput
}

input TaskItemSortInput {
  id: SortEnumType
  title: SortEnumType
  isCompleted: SortEnumType
}

